1.Total Bookings Per Route
 Ans-SELECT 
    Buses.route, 
    COUNT(Bookings.booking_id) AS total_bookings 
FROM 
    Bookings 
JOIN 
    Buses ON Bookings.bus_id = Buses.bus_id 
GROUP BY 
    Buses.route;

2.Total Revenue Per Route
Ans-SELECT 
    Buses.route, 
    SUM(Bookings.price) AS total_revenue 
FROM 
    Bookings 
JOIN 
    Buses ON Bookings.bus_id = Buses.bus_id 
GROUP BY 
    Buses.route;

3.Total Bookings Per Customer
Ans-SELECT 
    Customers.customer_name, 
    COUNT(Bookings.booking_id) AS total_bookings 
FROM 
    Bookings 
JOIN 
    Customers ON Bookings.customer_id = Customers.customer_id 
GROUP BY 
    Customers.customer_name;

4.Total Revenue Per Customer
Ans-SELECT 
    Customers.customer_name, 
    SUM(Bookings.price) AS total_spent 
FROM 
    Bookings 
JOIN 
    Customers ON Bookings.customer_id = Customers.customer_id 
GROUP BY 
    Customers.customer_name;

5.Peak Booking Dates
Ans-SELECT 
    booking_date, 
    COUNT(booking_id) AS total_bookings 
FROM 
    Bookings 
GROUP BY 
    booking_date 
ORDER BY 
    total_bookings DESC 
LIMIT 5;

6.Average Ticket Price Per Route
Ans-SELECT 
    Buses.route, 
    Round(AVG(Bookings.price),2) AS avg_ticket_price 
FROM 
    Bookings 
JOIN 
    Buses ON Bookings.bus_id = Buses.bus_id 
GROUP BY 
    Buses.route;

7.How many customers have made bookings on routes that pass through Mumbai?
Ans-SELECT 
    COUNT(DISTINCT C.customer_id) AS total_customers
FROM 
    Customers C
JOIN 
    Bookings B ON C.customer_id = B.customer_id
JOIN 
    Buses BU ON B.bus_id = BU.bus_id
WHERE 
    BU.route LIKE '%Mumbai%';


8.Booking Details for a Specific Date
Ans-SELECT 
    Customers.customer_name, 
    Buses.bus_number, 
    Bookings.seat_number, 
    Bookings.price 
FROM 
    Bookings 
JOIN 
    Customers ON Bookings.customer_id = Customers.customer_id 
JOIN 
    Buses ON Bookings.bus_id = Buses.bus_id 
WHERE 
    Bookings.booking_date = '2024-05-01';

9.Bus Utilization (Seats Booked)
Ans-SELECT 
    Buses.bus_number, 
    Buses.seats, 
    COUNT(Bookings.seat_number) AS seats_booked, 
    (COUNT(Bookings.seat_number) / Buses.seats) * 100 AS utilization_percentage 
FROM 
    Buses 
JOIN 
    Bookings ON Buses.bus_id = Bookings.bus_id 
GROUP BY 
    Buses.bus_number, Buses.seats;

10.Revenue Contribution by Top 5 Customers
Ans-SELECT 
    Customers.customer_name, 
    SUM(Bookings.price) AS total_spent 
FROM 
    Bookings 
JOIN 
    Customers ON Bookings.customer_id = Customers.customer_id 
GROUP BY 
    Customers.customer_name 
ORDER BY 
    total_spent DESC 
LIMIT 5;

11.CTE to Find Daily Booking Trend
Ans-WITH DailyBookings AS (
    SELECT 
        booking_date, 
        COUNT(booking_id) AS total_bookings 
    FROM 
        Bookings 
    GROUP BY 
        booking_date
)
SELECT 
    booking_date, 
    total_bookings 
FROM 
    DailyBookings 
ORDER BY 
    booking_date;


12.Window Function: Running Total of Bookings
Ans-SELECT 
    booking_date, 
    COUNT(booking_id) OVER (ORDER BY booking_date) AS running_total 
FROM 
    Bookings;


13.Total Seats Booked Per Bus
Ans-SELECT 
    Buses.bus_number, 
    COUNT(Bookings.seat_number) AS total_seats_booked 
FROM 
    Bookings 
JOIN 
    Buses ON Bookings.bus_id = Buses.bus_id 
GROUP BY 
    Buses.bus_number;

14.Most Popular Routes
Ans-SELECT 
    Buses.route, 
    COUNT(Bookings.booking_id) AS total_bookings 
FROM 
    Bookings 
JOIN 
    Buses ON Bookings.bus_id = Buses.bus_id 
GROUP BY 
    Buses.route 
ORDER BY 
    total_bookings DESC 
LIMIT 5;

15.Least Popular Routes
Ans-SELECT 
    Buses.route, 
    COUNT(Bookings.booking_id) AS total_bookings 
FROM 
    Bookings 
JOIN 
    Buses ON Bookings.bus_id = Buses.bus_id 
GROUP BY 
    Buses.route 
ORDER BY 
    total_bookings ASC 
LIMIT 5;

16.Total Revenue Generated by Each Bus
Ans-SELECT 
    Buses.bus_number, 
    SUM(Bookings.price) AS total_revenue 
FROM 
    Bookings 
JOIN 
    Buses ON Bookings.bus_id = Buses.bus_id 
GROUP BY 
    Buses.bus_number;

17.Customer Details with Their Booking Count
Ans-SELECT 
    Customers.customer_name, 
    Customers.email, 
    Customers.phone, 
    COUNT(Bookings.booking_id) AS total_bookings 
FROM 
    Bookings 
JOIN 
    Customers ON Bookings.customer_id = Customers.customer_id 
GROUP BY 
    Customers.customer_name, Customers.email, Customers.phone;

18.Bus Route Popularity Over Time
Ans-SELECT 
    Buses.route, 
    EXTRACT(MONTH FROM Bookings.booking_date) AS month, 
    COUNT(Bookings.booking_id) AS total_bookings 
FROM 
    Bookings 
JOIN 
    Buses ON Bookings.bus_id = Buses.bus_id 
GROUP BY 
    Buses.route, EXTRACT(MONTH FROM Bookings.booking_date);

19.Monthly Revenue Trends
Ans-SELECT 
    EXTRACT(MONTH FROM booking_date) AS month, 
    SUM(price) AS total_revenue 
FROM 
    Bookings 
GROUP BY 
    EXTRACT(MONTH FROM booking_date) 
ORDER BY 
    month;

20.Average Revenue Per Booking
Ans-SELECT 
    Round(AVG(price),2) AS avg_revenue_per_booking 
FROM 
    Bookings;

21.Most Frequent Bookers
Ans-SELECT 
    Customers.customer_name, 
    COUNT(Bookings.booking_id) AS total_bookings 
FROM 
    Bookings 
JOIN 
    Customers ON Bookings.customer_id = Customers.customer_id 
GROUP BY 
    Customers.customer_name 
ORDER BY 
    total_bookings DESC 
LIMIT 5;

22.Revenue from Top 3 Buses
Ans-SELECT 
    Buses.bus_number, 
    SUM(Bookings.price) AS total_revenue 
FROM 
    Bookings 
JOIN 
    Buses ON Bookings.bus_id = Buses.bus_id 
GROUP BY 
    Buses.bus_number 
ORDER BY 
    total_revenue DESC 
LIMIT 3;

23.Bookings Count by Customer City
Ans-SELECT 
    Customers.city, 
    COUNT(Bookings.booking_id) AS total_bookings 
FROM 
    Bookings 
JOIN 
    Customers ON Bookings.customer_id = Customers.customer_id 
GROUP BY 
    Customers.city;

24.Revenue by Customer City
Ans-SELECT 
    Customers.city, 
    SUM(Bookings.price) AS total_revenue 
FROM 
    Bookings 
JOIN 
    Customers ON Bookings.customer_id = Customers.customer_id 
GROUP BY 
    Customers.city;

25.Percentage of Bookings Per Route
Ans-SELECT 
    Buses.route, 
    (COUNT(Bookings.booking_id) * 100.0 / (SELECT COUNT(*) FROM Bookings)) AS percentage_bookings 
FROM 
    Bookings 
JOIN 
    Buses ON Bookings.bus_id = Buses.bus_id 
GROUP BY 
    Buses.route;

26.Customers Without Bookings
Ans-SELECT 
    Customers.customer_name 
FROM 
    Customers 
LEFT JOIN 
    Bookings ON Customers.customer_id = Bookings.customer_id 
WHERE 
    Bookings.booking_id IS NULL;


27.Window Function: Total Bookings by Date
Ans-SELECT 
    booking_date, 
    COUNT(booking_id) OVER (ORDER BY booking_date) AS running_total_bookings 
FROM 
    Bookings;

28.CTE to Find Most Recent Bookings
Amns-WITH RecentBookings AS (
    SELECT 
        booking_id, 
        customer_id, 
        bus_id, 
        booking_date, 
        seat_number, 
        price, 
        ROW_NUMBER() OVER (ORDER BY booking_date DESC) AS row_num 
    FROM 
        Bookings
)
SELECT 
    booking_id, 
    customer_id, 
    bus_id, 
    booking_date, 
    seat_number, 
    price 
FROM 
    RecentBookings 
WHERE 
    row_num <= 10;


29.Top 5 Revenue Generating Cities
Ans-SELECT 
    Customers.city, 
    SUM(Bookings.price) AS total_revenue 
FROM 
    Bookings 
JOIN 
    Customers ON Bookings.customer_id = Customers.customer_id 
GROUP BY 
    Customers.city 
ORDER BY 
    total_revenue DESC 
LIMIT 5;

30.Detailed Booking Information
Ans-SELECT 
    Bookings.booking_id, 
    Customers.customer_name, 
    Buses.bus_number, 
    Bookings.booking_date, 
    Bookings.seat_number, 
    Bookings.price 
FROM 
    Bookings 
JOIN 
    Customers ON Bookings.customer_id = Customers.customer_id 
JOIN 
    Buses ON Bookings.bus_id = Buses.bus_id 
ORDER BY 
    Bookings.booking_date DESC 
LIMIT 20;
